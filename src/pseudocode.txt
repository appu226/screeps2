//creep operations
giveToCreep(giver, creep)
takeFromCreep(taker, creep)
takeFromSource(taker, source)
giveToSpawn(doer, spawn)
buildObject(builder, object)

processHarvestor(harvestor, source, target)
processTransporter(transporter, sources, destinations)
processUpdator(updator, source, controller)

processAction(doer, action, target)

processWorker(
  worker,
  actionWhenFull, targetWhenFull
  actionWhenHalfFull, targetWhenHalfFull
  actionWhenEmpty, targetWhenEmpty 
)

createSourceToSpawnUnit(source, targetSpawn, spawnToCreate) {
  search for harvesting spots on targetSpawn
  create a unit for harvesting from a source and transporting to a spawn
}

createSourceToUpdatorUnit(source, targetController, spawnToCreate))

processSourceToSpawnUnit(unit) {
  for all dead creeps
    remove from graph
  if any harvestingslots empty and harvesting capacity less than full,
    add "Harvestor" for unit to the request queue of spawnToCreate
  process actions for all harvestors and transporters
  if harvestor full {
    if no transporter {
      add transporterForTransporters for unit to the request queue of spawnToCreate
  } else if transporter is not full {
      add transporterForHarvestor for (harvestor, unit) to the request queue
  } else {
      add transporter for transporters to the request queue
  }
}

processSpawn(spawn) {
  if spawn is not full
    skip processing
  find the most popular request from the queue
  create that creep
  remove all requests from queue
}

